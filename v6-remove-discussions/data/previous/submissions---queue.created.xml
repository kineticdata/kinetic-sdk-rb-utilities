<tree schema_version='1.0'>
    <sourceName>Kinetic Request CE</sourceName>
    <sourceGroup>Submissions > queue</sourceGroup>
    <type>Tree</type>
    <status>Active</status>
    <taskTree builder_version='' schema_version='1.0' version=''>
        <name>Created</name>
        <author/>
        <notes/>
        <lastID>28</lastID>
        <request>
            <task definition_id='system_start_v1' id='start' name='Start' x='516' y='-56'>
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters/>
                <messages/>
                <dependents>
                    <task label='' type='Complete' value=''>routine_kinetic_queue_submission_config_v1_14</task>
                </dependents>
            </task>
            <task definition_id='routine_kinetic_submission_update_observers_v1' id='routine_kinetic_submission_update_observers_v1_12' name='Set Parent Assignees as Observers' x='749' y='276'>
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId='' dependsOnValue='' id='Submission Id' label='Submission Id' menu='' required='true' tooltip='Id of the submission to update'>&lt;%= @submission['Id']%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Observing Teams' label='Observing Teams' menu='' required='false' tooltip='JSON array of team names to add to Observing Teams field on Submission'>&lt;%=
key = "Assigned Team"
JSON.parse(@results['Get Parent Submission']['Values JSON'])[key]%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Observing Individuals' label='Observing Individuals' menu='' required='false' tooltip='JSON array of usernames to add to Observing Individuals field on Submission'>&lt;%=
key = "Assigned Individual"
JSON.parse(@results['Get Parent Submission']['Values JSON'])[key]%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Replace Existing' label='Replace Existing' menu='' required='false' tooltip='true or false if existing observers should be replaced'>false</parameter>
                </parameters>
                <messages/>
                <dependents/>
            </task>
            <task definition_id='routine_kinetic_submission_retrieve_v1' id='routine_kinetic_submission_retrieve_v1_13' name='Get Parent Submission' x='749' y='176'>
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId='' dependsOnValue='' id='Id' label='Id' menu='' required='true' tooltip='The Id of the submission to retrieve'>&lt;%= @submission['Parent Id']%&gt;</parameter>
                </parameters>
                <messages/>
                <dependents>
                    <task label='' type='Complete' value=''>routine_kinetic_submission_update_observers_v1_12</task>
                </dependents>
            </task>
            <task definition_id='routine_kinetic_queue_submission_config_v1' id='routine_kinetic_queue_submission_config_v1_14' name='Get Config' x='517' y='33'>
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId='' dependsOnValue='' id='Source Data' label='Source Data' menu='' required='false' tooltip='Submission Source Data Used to Build Configuration'>&lt;%=@source['Data']%&gt;</parameter>
                </parameters>
                <messages/>
                <dependents>
                    <task label='Open' type='Complete' value='![&apos;Complete&apos;,&apos;Closed&apos;,&apos;Cancelled&apos;].include?(@values[&apos;Status&apos;].to_s)'>system_noop_v1_15</task>
                    <task label='Parent != Origin' type='Complete' value='!@submission[&apos;Parent Id&apos;].to_s.empty? &amp;&amp; !@submission[&apos;Origin Id&apos;].to_s.empty? &amp;&amp; @submission[&apos;Parent Id&apos;] != @submission[&apos;Origin Id&apos;]'>system_noop_v1_16</task>
                    <task label='Has Origin' type='Complete' value='!@submission[&apos;Origin Id&apos;].to_s.empty?'>routine_kinetic_queue_task_relate_origin_submission_discussion_v1_19</task>
                </dependents>
            </task>
            <task definition_id='system_noop_v1' id='system_noop_v1_15' name='Notification' x='257' y='113'>
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters/>
                <messages/>
                <dependents>
                    <task label='Has Assignee' type='Complete' value='!@values[&apos;Assigned Individual&apos;].nil? &amp;&amp; @values[&apos;Assigned Individual&apos;] != @submission[&apos;Created By&apos;]'>routine_kinetic_email_template_notification_send_v1_17</task>
                    <task label='No Assignee &amp;amp; Has Due Date' type='Complete' value='@values[&apos;Assigned Individual&apos;].nil?'>routine_email_template_notification_send_with_alternate_email_list_20</task>
                </dependents>
            </task>
            <task definition_id='system_noop_v1' id='system_noop_v1_16' name='Observers' x='746' y='107'>
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters/>
                <messages/>
                <dependents>
                    <task label='' type='Complete' value=''>routine_kinetic_submission_retrieve_v1_13</task>
                </dependents>
            </task>
            <task definition_id='routine_kinetic_email_template_notification_send_v1' id='routine_kinetic_email_template_notification_send_v1_17' name='Notify - Assignee' x='149' y='227'>
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId='' dependsOnValue='' id='Recipient List' label='Recipient List' menu='' required='true' tooltip='Comma separated list of recipients (Usernames, SMTP Addresses, and/or Team Names)'>&lt;%= @values['Assigned Individual']%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Notification Template Name' label='Notification Template Name' menu='' required='true' tooltip='Name of the notification template to use when sending this email'>&lt;%=@results['Get Config']['Notification Template Name - Create']%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='JSON Variables' label='JSON Variables' menu='' required='false' tooltip='JSON input of miscellaneous values.  These values are used to replace placeholder content in notification messages.'>&lt;%={
  "Target"=&gt; "you"
}.to_json%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Kapp Slug Initiating Notification' label='Kapp Slug Initiating Notification' menu='' required='true' tooltip='The slug of the Kapp sending the notification (ex: catalog, queue, etc.)'>&lt;%= @kapp['Slug']%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Related Submission Id' label='Related Submission Id' menu='' required='false' tooltip='Id of the submission to get values for, required if using those or attachments in the message'>&lt;%= @submission['Id']%&gt;</parameter>
                </parameters>
                <messages/>
                <dependents/>
            </task>
            <task definition_id='routine_kinetic_email_template_notification_send_v1' id='routine_kinetic_email_template_notification_send_v1_18' name='Notify - Team (OLD)' x='341' y='291'>
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId='' dependsOnValue='' id='Recipient List' label='Recipient List' menu='' required='true' tooltip='Comma separated list of recipients (Usernames, SMTP Addresses, and/or Team Names)'>&lt;%= @values['Assigned Team']%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Notification Template Name' label='Notification Template Name' menu='' required='true' tooltip='Name of the notification template to use when sending this email'>&lt;%=@results['Get Config']['Notification Template Name - Create']%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='JSON Variables' label='JSON Variables' menu='' required='false' tooltip='JSON input of miscellaneous values.  These values are used to replace placeholder content in notification messages.'>&lt;%={
  "Target"=&gt; "the #{@values['Assigned Team']} team"
}.to_json%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Kapp Slug Initiating Notification' label='Kapp Slug Initiating Notification' menu='' required='true' tooltip='The slug of the Kapp sending the notification (ex: catalog, queue, etc.)'>&lt;%= @kapp['Slug']%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Related Submission Id' label='Related Submission Id' menu='' required='false' tooltip='Id of the submission to get values for, required if using those or attachments in the message'>&lt;%= @submission['Id']%&gt;</parameter>
                </parameters>
                <messages/>
                <dependents/>
            </task>
            <task definition_id='routine_kinetic_queue_task_relate_origin_submission_discussion_v1' id='routine_kinetic_queue_task_relate_origin_submission_discussion_v1_19' name='Relate to Origin Discussion' x='528' y='209'>
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId='' dependsOnValue='' id='Origin Submission Id' label='Origin Submission Id' menu='' required='false' tooltip='The Id of the Origin Submission. If the origin&apos;s submission has a discussion,  a discussion relationship will be created to the provided related submission'>&lt;%= @submission['Origin Id']%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Related Submission Id' label='Related Submission Id' menu='' required='false' tooltip='The Id of the Submission to Relate to the Origins Discussion, if it exists'>&lt;%= @submission['Id']%&gt;</parameter>
                </parameters>
                <messages/>
                <dependents/>
            </task>
            <task definition_id='routine_email_template_notification_send_with_alternate_email_list' id='routine_email_template_notification_send_with_alternate_email_list_20' name='Notify - Team with Alternate Emails' x='369' y='223'>
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId='' dependsOnValue='' id='Recipient List' label='Recipient List' menu='' required='true' tooltip='Comma separated list of recipients (Usernames, SMTP Addresses, and/or Team Names)'>&lt;%= @values['Assigned Team']%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Notification Template Name' label='Notification Template Name' menu='' required='true' tooltip='Name of the notification template to use when sending this email'>&lt;%=@results['Get Config']['Notification Template Name - Create']%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='JSON Variables' label='JSON Variables' menu='' required='false' tooltip='JSON input of miscellaneous values.  These values are used to replace placeholder content in notification messages.'>&lt;%={
  "Target"=&gt; "the #{@values['Assigned Team']} team"
}.to_json%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Kapp Slug Initiating Notification' label='Kapp Slug Initiating Notification' menu='' required='true' tooltip='The slug of the Kapp sending the notification (ex: services, queue, etc.)'>&lt;%= @kapp['Slug']%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Related Submission Id' label='Related Submission Id' menu='' required='false' tooltip='Id of the submission to get values for, required if using those or attachments in the message'>&lt;%= @submission['Id']%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Form Slug Initiating Notification' label='Form Slug Initiating Notification' menu='' required='false' tooltip='The slug of the Form sending the notification (ex: work-order, cleaning, etc.)'>&lt;%= @form['Slug']%&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Is Datastore' label='Is Datastore' menu='' required='false' tooltip='If the Related Submission Id, or Form Slug is a datastore form.'>false</parameter>
                </parameters>
                <messages/>
                <dependents/>
            </task>
            <task definition_id='routine_kinetic_submission_retrieve_v1' id='routine_kinetic_submission_retrieve_v1_21' name='Get Originating Request' x='981' y='61'>
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId='' dependsOnValue='' id='Id' label='Id' menu='' required='true' tooltip='The Id of the submission to retrieve'>&lt;%=  @submission['Origin Id'] %&gt;</parameter>
                </parameters>
                <messages/>
                <dependents>
                    <task label='' type='Complete' value=''>routine_kinetic_form_retrieve_v1_22</task>
                </dependents>
            </task>
            <task definition_id='routine_kinetic_form_retrieve_v1' id='routine_kinetic_form_retrieve_v1_22' name='Retrieve Form Attributes' x='981' y='261'>
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId='' dependsOnValue='' id='Kapp Slug' label='Kapp Slug' menu='' required='true' tooltip='The slug of the Kapp the form exists in'>services</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Slug' label='Slug' menu='' required='true' tooltip='The Forms slug'>&lt;%= @results['Get Originating Request']['Form Slug'] %&gt;</parameter>
                </parameters>
                <messages/>
                <dependents>
                    <task label='If Autoclose' type='Complete' value='JSON.parse(@results[&apos;Retrieve Form Attributes&apos;][&apos;Attributes Map JSON&apos;])[&apos;Autoclose&apos;][0].downcase==&quot;true&quot;'>kinetic_core_api_v1_25</task>
                </dependents>
            </task>
            <task definition_id='routine_kinetic_submission_update_v1' id='routine_kinetic_submission_update_v1_23' name='Close Submission' x='981' y='461'>
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId='' dependsOnValue='' id='Id' label='Id' menu='' required='true' tooltip='The id of the submission to update'>&lt;%=  @submission['Id'] %&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Updated - Core State' label='Updated - Core State' menu='' required='false' tooltip='The submissions core state'>Closed</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Updated - Current Page Name' label='Updated - Current Page Name' menu='' required='false' tooltip='The page to set the submission to'/>
                    <parameter dependsOnId='' dependsOnValue='' id='Updated - Current Page Navigation' label='Updated - Current Page Navigation' menu='' required='false' tooltip='The direction of the next page (next or previous)'/>
                    <parameter dependsOnId='' dependsOnValue='' id='Updated - Origin Id' label='Updated - Origin Id' menu='' required='false' tooltip='The Id of the submissions origin'/>
                    <parameter dependsOnId='' dependsOnValue='' id='Updated - Parent Id' label='Updated - Parent Id' menu='' required='false' tooltip='The Id of the submissions parent'/>
                    <parameter dependsOnId='' dependsOnValue='' id='Updated - Values JSON' label='Updated - Values JSON' menu='' required='false' tooltip='A JSON representation of the submissions values'>&lt;%=
{
"Status" =&gt; "Complete",
"Resolution"=&gt; "Done",
"Assigned Team"=&gt; "Default",
"Deferral Token"=&gt; @values['Deferral Token']
}.to_json
%&gt;</parameter>
                </parameters>
                <messages/>
                <dependents/>
            </task>
            <task definition_id='utilities_echo_v1' id='utilities_echo_v1_24' name='Test' x='1242' y='454'>
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter dependsOnId='' dependsOnValue='' id='input' label='Input' menu='' required='true' tooltip=''>&lt;%= JSON.parse(@results['Retrieve Form Attributes']['Attributes Map JSON'])['Autoclose'][0].downcase=="true" %&gt;</parameter>
                </parameters>
                <messages/>
                <dependents/>
            </task>
            <task definition_id='kinetic_core_api_v1' id='kinetic_core_api_v1_25' name='Test Close' x='1118' y='575'>
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId='' dependsOnValue='' id='error_handling' label='Error Handling' menu='Error Message,Raise Error' required='true' tooltip='Determine what to return if an error is encountered.'>Error Message</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='method' label='Method' menu='GET,POST,PUT,PATCH,DELETE' required='true' tooltip='GET,POST,PUT,PATCH,DELETE (Defaults to GET)'>PUT</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='path' label='Path' menu='' required='true' tooltip='Example: /kapps/:kappSlug/forms/:formSlug'>/submissions/&lt;%=  @submission['Id'] %&gt;?completed=true</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='body' label='Body' menu='' required='false' tooltip='JSON body if applicable (POST,PUT,PATCH)'>&lt;%=
team = JSON.parse(@results['Retrieve Form Attributes']['Attributes Map JSON'])['Task Assignee Team'][0]
{
"coreState"=&gt; "Closed",
"values"=&gt; {
"Status" =&gt; "Complete",
"Resolution"=&gt; "Done",
"Assigned Team"=&gt; team,
"Deferral Token"=&gt; @values['Deferral Token']
}}.to_json
%&gt;</parameter>
                </parameters>
                <messages/>
                <dependents>
                    <task label='' type='Complete' value=''>system_wait_v1_28</task>
                </dependents>
            </task>
            <task definition_id='utilities_create_trigger_v1' id='utilities_create_trigger_v1_27' name='Complete Deferral' x='1118' y='775'>
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter dependsOnId='' dependsOnValue='' id='action_type' label='Action Type' menu='Update,Complete' required='true' tooltip=''>Complete</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='deferral_token' label='Deferral Token' menu='' required='true' tooltip=''>&lt;%=  @values['Deferral Token'] %&gt;</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='deferred_variables' label='Deferred Results' menu='' required='false' tooltip=''/>
                    <parameter dependsOnId='' dependsOnValue='' id='message' label='Message' menu='' required='false' tooltip=''/>
                </parameters>
                <messages/>
                <dependents/>
            </task>
            <task definition_id='system_wait_v1' id='system_wait_v1_28' name='wait' x='1318' y='775'>
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter dependsOnId='' dependsOnValue='' id='Time to wait' label='Wait time:' menu='' required='true' tooltip='Time you want to wait for deferred task'>10</parameter>
                    <parameter dependsOnId='' dependsOnValue='' id='Time unit' label='Time unit:' menu='Second,Minute,Hour,Day,Week' required='true' tooltip='Unit of measurement for time (Seconds, Minutes, Hours, Days, Weeks)'>Second</parameter>
                </parameters>
                <messages>
                    <message type='Create'/>
                    <message type='Update'/>
                    <message type='Complete'/>
                </messages>
                <dependents>
                    <task label='' type='Complete' value=''>utilities_create_trigger_v1_27</task>
                </dependents>
            </task>
        </request>
    </taskTree>
</tree>